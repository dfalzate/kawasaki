#include <U8g2lib.h>
#include <U8x8lib.h>

#include <Wire.h>

#include "BluetoothSerial.h"

#define SCREEN_WIDTH 128 // OLED display width, in pixels
#define SCREEN_HEIGHT 64 // OLED display height, in pixels

// Declaration for an SSD1306 display connected to I2C (SDA, SCL pins)

#define LED_BUILTIN 2
#define Arranque 4
#define OLED_RESET LED_BUILTIN // Reset pin # (or -1 if sharing Arduino reset pin)
Adafruit_SSD1306 display(SCREEN_WIDTH, SCREEN_HEIGHT, &Wire, OLED_RESET);

#if !defined(CONFIG_BT_ENABLED) || !defined(CONFIG_BLUEDROID_ENABLED)
#error Bluetooth is not enabled! Please run `make menuconfig` to and enable it
#endif

#define LOGO_BLUETOOTH_HEIGHT 32
#define LOGO_BLUETOOTH_WIDTH 23

static const unsigned char PROGMEM logoBluetooth[] =
    {
        B00000001, B11111111, B00000000, //        #########
        B00000111, B11111111, B11000000, //      #############
        B00001111, B11111111, B11110000, //     ################
        B00011111, B11000111, B11110000, //    #######   #######
        B00111111, B11000011, B11111000, //   ########    #######
        B00111111, B11000001, B11111100, //   ########     #######
        B01111111, B11000000, B11111100, //  #########      ######
        B01111111, B11000000, B01111100, //  #########       #####
        B01111111, B11000100, B00111100, //  #########   #    ####
        B01110001, B11000110, B00011110, //  ###   ###   ##    ####
        B01110000, B11000110, B00011110, //  ###    ##   ##    ####
        B01111000, B01000100, B00111110, //  ####    #   #    #####
        B11111100, B00000000, B01111110, // ######           ######
        B11111110, B00000000, B11111110, // #######         #######
        B11111111, B00000001, B11111110, // ########       ########
        B11111111, B10000011, B11111110, // #########     #########
        B11111111, B10000011, B11111110, // #########     #########
        B11111111, B00000001, B11111110, // ########       ########
        B11111110, B00000000, B11111110, // #######         #######
        B11111100, B00000000, B01111110, // ######           ######
        B01111000, B01000100, B00111110, //  ####    #   #    #####
        B01110000, B11000110, B00011110, //  ###    ##   ##    ####
        B01110001, B11000110, B00011110, //  ###   ###   ##    ####
        B01111111, B11000100, B00111100, //  #########   #    ####
        B01111111, B11000000, B01111100, //  #########       #####
        B01111111, B11000000, B11111100, //  #########      ######
        B00111111, B11000001, B11111100, //   ########     #######
        B00111111, B11000011, B11111000, //   ########    #######
        B00011111, B11000111, B11110000, //    #######   #######
        B00001111, B11111111, B11110000, //     ################
        B00000111, B11111111, B11000000, //      #############
        B00000001, B11111111, B00000000, //        #########
};

#define LOGO_GEAR_HEIGHT 28
#define LOGO_GEAR_WIDTH 28

static const unsigned char PROGMEM logoGear[] =
    {
        B00000000, B00011111, B10000000, B00000000, //            ######
        B00000000, B00011111, B10000000, B00000000, //            ######
        B00000010, B00011111, B10000100, B00000000, //       #    ######    #
        B00000111, B00011111, B10001110, B00000000, //      ###   ######   ###
        B00001111, B11111111, B11111111, B00000000, //     ####################
        B00011111, B11111111, B11111111, B10000000, //    ######################
        B00111111, B11111111, B11111111, B11000000, //   ########################
        B00011111, B11111111, B11111111, B10000000, //    ######################
        B00001111, B11111111, B11111111, B00000000, //     ####################
        B00001111, B11111111, B11111111, B00000000, //     ####################
        B00001111, B11110000, B11111111, B00000000, //     ########    ########
        B11111111, B11100000, B01111111, B11110000, // ###########      ###########
        B11111111, B11000000, B00111111, B11110000, // ##########        ##########
        B11111111, B11000000, B00111111, B11110000, // ##########        ##########
        B11111111, B11000000, B00111111, B11110000, // ##########        ##########
        B11111111, B11000000, B00111111, B11110000, // ##########        ##########
        B11111111, B11100000, B01111111, B11110000, // ###########      ###########
        B00001111, B11110000, B11111111, B00000000, //     ########    ########
        B00001111, B11111111, B11111111, B00000000, //     ####################
        B00001111, B11111111, B11111111, B00000000, //     ####################
        B00011111, B11111111, B11111111, B10000000, //    ######################
        B00111111, B11111111, B11111111, B11000000, //   ########################
        B00011111, B11111111, B11111111, B10000000, //    ######################
        B00001111, B11111111, B11111111, B00000000, //     ####################
        B00000111, B00011111, B10001110, B00000000, //      ###   ######   ###
        B00000010, B00011111, B10000100, B00000000, //       #    ######    #
        B00000000, B00011111, B10000000, B00000000, //            ######
        B00000000, B00011111, B10000000, B00000000, //            ######
};

#define LOGO_ER6N_HEIGHT 26
#define LOGO_ER6N_WIDTH 127

static const unsigned char PROGMEM logoER6N[] =
    {
        B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B01111111, B11111111, B11110000, B00000000, B00000000, B00000000, //                                                                                  ###################
        B00000000, B00111111, B11111111, B11111111, B11111110, B11111111, B11111111, B11111000, B00000000, B00000011, B11111111, B11111111, B11111110, B00000000, B00000000, B00000000, //           ############################# #####################                 #########################
        B00000000, B01111111, B11111111, B11111111, B11111110, B11111111, B11111111, B11111100, B00000000, B00000111, B11111111, B11111111, B11111111, B00000000, B00000000, B00000000, //          ############################## ######################               ###########################
        B00000000, B11111111, B11111111, B11111111, B11111100, B11111111, B11111111, B11111110, B00000000, B00011111, B11111111, B11111111, B11111111, B10000000, B00000000, B00000000, //         ##############################  #######################            ##############################
        B00000000, B11111111, B11111111, B11111111, B11111101, B11111111, B11111111, B11111110, B00000000, B00011111, B11111111, B11111111, B11111111, B10000000, B00000000, B00000000, //         ############################## ########################            ##############################
        B00000001, B11111111, B11111111, B11111111, B11111101, B11111111, B11111111, B11111111, B00000000, B00111111, B11111111, B11111111, B11111111, B11000000, B00000000, B00000000, //        ############################### #########################          ################################
        B00000001, B11111111, B11111111, B11111111, B11111011, B11111111, B11111111, B11111111, B00000000, B01111111, B11111000, B00000011, B11111111, B11000000, B00000000, B00000000, //        ############################## ##########################         ############         ############
        B00000011, B11111111, B11111111, B11111111, B11111011, B11111110, B00000000, B11111111, B00000000, B01111111, B11110000, B00000000, B11111110, B00001111, B11111111, B11111000, //       ############################### #########         ########         ###########            #######     #################
        B00000011, B11111110, B00000000, B00000000, B00000011, B11111100, B00000000, B11111110, B00000000, B11111111, B11110000, B00000000, B00000000, B00011111, B11111111, B11111110, //       #########                       ########          #######         ############                       ####################
        B00000011, B11111110, B00000000, B00000000, B00000111, B11111100, B00000000, B11111110, B00000000, B11111111, B11100000, B00000000, B00000000, B00011111, B11111111, B11111110, //       #########                      #########          #######         ###########                        ####################
        B00000111, B11111101, B11111111, B11111111, B00000111, B11111100, B00000001, B11111110, B00000000, B11111111, B11111111, B11111111, B11111000, B00011111, B11111111, B11111110, //      ######### #################     #########         ########         #############################      ####################
        B00000111, B11111111, B11111111, B11111111, B00000111, B11111000, B00000011, B11111110, B00000101, B11111111, B11111111, B11111111, B11111110, B00111111, B11111111, B11111110, //      ###########################     ########         #########      # ################################   #####################
        B00000111, B11111111, B11111111, B11111110, B00001111, B11111111, B11111111, B11111101, B11111101, B11111111, B11111111, B11111111, B11111110, B00111111, B11111111, B11111110, //      ##########################     ########################## ####### ################################   #####################
        B00001111, B11111011, B11111111, B11111110, B00001111, B11111111, B11111111, B11111101, B11111101, B11111111, B11111111, B11111111, B11111110, B00111111, B11000001, B11111110, //     ######### #################     ########################## ####### ################################   ########     ########
        B00001111, B11111011, B11111111, B11111110, B00001111, B11110111, B11111111, B11111011, B11111111, B11111111, B11111111, B11111111, B11111110, B01111111, B11000011, B11111110, //     ######### #################     ######## ################ #########################################  #########    #########
        B00001111, B11111011, B11111111, B11111100, B00011111, B11110011, B11111111, B11110011, B11111011, B11111111, B11111111, B11111111, B11111110, B01111111, B11000011, B11111100, //     ######### ################     #########  ##############  ####### #################################  #########    ########
        B00011111, B11110001, B11111111, B11111100, B00011111, B11110011, B11111111, B11100111, B11111011, B11111111, B10000000, B00000111, B11111110, B11111111, B10000011, B11111100, //    #########   ###############     #########  #############  ######## ###########            ########## #########     ########
        B00011111, B11110000, B00000000, B00000000, B00011111, B11100001, B11111111, B00000111, B11111111, B11111111, B00000000, B00001111, B11111100, B11111111, B10000111, B11111100, //    #########                       ########    #########     ###################            ##########  #########    #########
        B00011111, B11110000, B00000000, B00000000, B00111111, B11100001, B11111110, B00000000, B00000111, B11111111, B00000000, B00001111, B11111100, B11111111, B10000111, B11111000, //    #########                      #########    ########              ###########            ##########  #########    ########
        B00111111, B11111111, B11111111, B11111100, B00111111, B11100001, B11111111, B00000000, B00000111, B11111111, B00000000, B00011111, B11111101, B11111111, B00001111, B11111000, //   ############################    #########    #########             ###########           ########### #########    #########
        B00111111, B11111111, B11111111, B11111100, B00111111, B11000000, B11111111, B00000000, B00001111, B11111111, B11111111, B11111111, B11111001, B11111111, B00001111, B11111000, //   ############################    ########      ########            #################################  #########    #########
        B00111111, B11111111, B11111111, B11111100, B01111111, B11000000, B11111111, B10000000, B00001111, B11111111, B11111111, B11111111, B11111001, B11111110, B00001111, B11110000, //   ############################   #########      #########           #################################  ########     ########
        B01111111, B11111111, B11111111, B11111100, B01111111, B11000000, B11111111, B10000000, B00001111, B11111111, B11111111, B11111111, B11110011, B11111110, B00011111, B11110000, //  #############################   #########      #########           ################################  #########    #########
        B01111111, B11111111, B11111111, B11111000, B11111111, B10000000, B01111111, B11000000, B00001111, B11111111, B11111111, B11111111, B11100011, B11111110, B00011111, B11110000, //  ############################   #########        #########          ###############################   #########    #########
        B01111111, B11111111, B11111111, B11111000, B11111111, B10000000, B01111111, B11000000, B00000111, B11111111, B11111111, B11111111, B11000111, B11111100, B00011111, B11100000, //  ############################   #########        #########           #############################   #########     ########
        B11111111, B11111111, B11111111, B11111000, B11111111, B10000000, B00111111, B11000000, B00000011, B11111111, B11111111, B11111111, B00000111, B11111100, B00111111, B11100000, // #############################   #########         ########            ##########################     #########    #########
};

#define LOGO_KAWASAKI_HEIGHT 20
#define LOGO_KAWASAKI_WIDTH 127

static const unsigned char PROGMEM logoKAWASAKI[] =
    {
        B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B01111111, B00000000, B00000000, //                                                                                                          #######
        B11111100, B00011111, B11100000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B01111111, B00000000, B01111110, // ######     ########                                                                                      #######         ######
        B11111100, B00111111, B11000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B01111111, B00000000, B01111110, // ######    ########                                                                                       #######         ######
        B11111100, B11111111, B10000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B01111111, B00000000, B01111110, // ######  #########                                                                                        #######         ######
        B11111100, B11111111, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B01111111, B00000000, B01111110, // ######  ########                                                                                         #######         ######
        B11111101, B11111111, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B01111111, B00000000, B00000000, // ###### #########                                                                                         #######
        B11111111, B11111110, B00000001, B11111111, B00111111, B00001111, B10000111, B11100011, B11111100, B00000111, B11111000, B00000111, B11111000, B01111111, B00111111, B01111110, // ###############        #########  ######    #####    ######   ########       ########        ########    #######  ###### ######
        B11111111, B11111100, B00000111, B11111111, B10111111, B10001111, B10001111, B11101111, B11111111, B00011111, B11111110, B00011111, B11111110, B01111111, B01111111, B01111110, // ##############       ############ #######   #####   ####### ############   ############    ############  ####### ####### ######
        B11111111, B11111000, B00001111, B11111111, B11111111, B10001111, B11001111, B11111111, B11111111, B10111111, B11111110, B00111111, B11111111, B01111111, B11111110, B01111110, // #############       #####################   ######  ##################### #############   ############## ##############  ######
        B11111111, B11111000, B00001111, B11111111, B11111111, B10011111, B11001111, B11111111, B11111111, B10111111, B00111111, B00111111, B11111111, B01111111, B11111100, B01111110, // #############       #####################  #######  ##################### ######  ######  ############## #############   ######
        B11111111, B11111110, B00011111, B11001111, B11111111, B11011111, B11111111, B11111111, B10011111, B11111111, B00111111, B01111111, B00111111, B01111111, B11111100, B01111110, // ###############    #######  ############## ######################  #############  ###### #######  ###### #############   ######
        B11111111, B11111111, B00000000, B11111111, B11101111, B11111111, B11111111, B10000001, B11111111, B11111111, B11111000, B00000011, B11111111, B01111111, B11110000, B01111110, // ################        ########### #####################      ######################         ########## ###########     ######
        B11111111, B11111111, B00000111, B11111111, B11101111, B11111111, B11111111, B10001111, B11111111, B11011111, B11111111, B00011111, B11111111, B01111111, B11111000, B01111110, // ################     ############## #####################   ############## #############   ############# ############    ######
        B11111110, B11111111, B00001111, B11111111, B11101111, B11111111, B11111111, B10011111, B11111111, B11001111, B11111111, B00111111, B11111111, B01111111, B11111000, B01111110, // ####### ########    ############### #####################  ###############  ############  ############## ############    ######
        B11111100, B01111111, B10011111, B11100111, B11100111, B11111111, B11111111, B00111111, B11001111, B11000111, B11111111, B01111111, B10011111, B01111111, B11111100, B01111110, // ######   ########  ########  ######  ###################  ########  ######   ########### ########  ##### #############   ######
        B11111100, B00111111, B10011111, B10001111, B11100111, B11111111, B11111111, B00111111, B00011111, B11111111, B00111111, B01111110, B00111111, B01111111, B11111110, B01111110, // ######    #######  ######   #######  ###################  ######   #############  ###### ######   ###### ##############  ######
        B11111100, B00111111, B11011111, B10011111, B11100111, B11111101, B11111111, B00111111, B00111111, B11111111, B00111111, B01111110, B01111111, B01111111, B11111110, B01111110, // ######    ######## ######  ########  ######### #########  ######  ##############  ###### ######  ####### ##############  ######
        B11111100, B00011111, B11011111, B11111111, B11100011, B11111101, B11111110, B00111111, B11111111, B11111111, B11111111, B01111111, B11111111, B01111111, B11111111, B01111110, // ######     ####### ################   ######## ########   ############################## ############### ############### ######
        B11111100, B00001111, B11111111, B11111111, B11100011, B11111101, B11111110, B00111111, B11111111, B11011111, B11111110, B01111111, B11111111, B01111111, B01111111, B01111110, // ######      #######################   ######## ########   ################ ############  ############### ####### ####### ######
        B11111100, B00001111, B11111111, B11111111, B11100001, B11111100, B11111110, B00011111, B11111111, B11001111, B11111100, B00111111, B11111111, B01111111, B00111111, B11111110, // ######      #######################    #######  #######    ###############  ##########    ############## #######  #############
};

#define LOGO_TEMP_HEIGHT 30
#define LOGO_TEMP_WIDTH 11

static const unsigned char PROGMEM logoTemp1[] =
    {
        B00001110, B00000000, //     ###
        B00111111, B10000000, //   #######
        B01110001, B11000000, //  ###   ###
        B01110001, B11000000, //  ###   ###
        B01110001, B11000000, //  ###   ###
        B01110001, B11000000, //  ###   ###
        B01110001, B11000000, //  ###   ###
        B01110001, B11000000, //  ###   ###
        B01110001, B11000000, //  ###   ###
        B01110001, B11000000, //  ###   ###
        B01110001, B11000000, //  ###   ###
        B01110001, B11000000, //  ###   ###
        B01110001, B11000000, //  ###   ###
        B01110001, B11000000, //  ###   ###
        B01110001, B11000000, //  ###   ###
        B01110001, B11000000, //  ###   ###
        B01110001, B11000000, //  ###   ###
        B01110001, B11000000, //  ###   ###
        B01110001, B11000000, //  ###   ###
        B01110001, B11000000, //  ###   ###
        B01110001, B11000000, //  ###   ###
        B01110001, B11000000, //  ###   ###
        B11100100, B11100000, // ###  #  ###
        B11101110, B11100000, // ### ### ###
        B11101110, B11100000, // ### ### ###
        B11100100, B11100000, // ###  #  ###
        B01110001, B11000000, //  ###   ###
        B01111111, B11000000, //  #########
        B00111111, B10000000, //   #######
        B00011111, B00000000, //    #####
};

static const unsigned char PROGMEM logoTemp2[] =
    {
        B00001110, B00000000, //     ###
        B00111111, B10000000, //   #######
        B01110001, B11000000, //  ###   ###
        B01110001, B11000000, //  ###   ###
        B01110001, B11000000, //  ###   ###
        B01110001, B11000000, //  ###   ###
        B01110001, B11000000, //  ###   ###
        B01110001, B11000000, //  ###   ###
        B01110001, B11000000, //  ###   ###
        B01110001, B11000000, //  ###   ###
        B01110001, B11000000, //  ###   ###
        B01110001, B11000000, //  ###   ###
        B01110001, B11000000, //  ###   ###
        B01110101, B11000000, //  ### # ###
        B01110101, B11000000, //  ### # ###
        B01110101, B11000000, //  ### # ###
        B01110101, B11000000, //  ### # ###
        B01110101, B11000000, //  ### # ###
        B01110101, B11000000, //  ### # ###
        B01110101, B11000000, //  ### # ###
        B01110101, B11000000, //  ### # ###
        B01110101, B11000000, //  ### # ###
        B11100100, B11100000, // ###  #  ###
        B11101110, B11100000, // ### ### ###
        B11101110, B11100000, // ### ### ###
        B11100100, B11100000, // ###  #  ###
        B01110001, B11000000, //  ###   ###
        B01111111, B11000000, //  #########
        B00111111, B10000000, //   #######
        B00011111, B00000000, //    #####
};

static const unsigned char PROGMEM logoTemp3[] =
    {
        B00001110, B00000000, //     ###
        B00111111, B10000000, //   #######
        B01110001, B11000000, //  ###   ###
        B01110101, B11000000, //  ### # ###
        B01110101, B11000000, //  ### # ###
        B01110101, B11000000, //  ### # ###
        B01110101, B11000000, //  ### # ###
        B01110101, B11000000, //  ### # ###
        B01110101, B11000000, //  ### # ###
        B01110101, B11000000, //  ### # ###
        B01110101, B11000000, //  ### # ###
        B01110101, B11000000, //  ### # ###
        B01110101, B11000000, //  ### # ###
        B01110101, B11000000, //  ### # ###
        B01110101, B11000000, //  ### # ###
        B01110101, B11000000, //  ### # ###
        B01110101, B11000000, //  ### # ###
        B01110101, B11000000, //  ### # ###
        B01110101, B11000000, //  ### # ###
        B01110101, B11000000, //  ### # ###
        B01110101, B11000000, //  ### # ###
        B01110101, B11000000, //  ### # ###
        B11100100, B11100000, // ###  #  ###
        B11101110, B11100000, // ### ### ###
        B11101110, B11100000, // ### ### ###
        B11100100, B11100000, // ###  #  ###
        B01110001, B11000000, //  ###   ###
        B01111111, B11000000, //  #########
        B00111111, B10000000, //   #######
        B00011111, B00000000, //    #####
};

BluetoothSerial SerialBT;

String Encendido, Apagado, Valor;

// the setup function runs once when you press reset or power the board
void setup()
{
  Serial.begin(115200);
  Encendido = String("encender");
  Apagado = String("apagar");

  pinMode(Arranque, OUTPUT);
  pinMode(LED_BUILTIN, OUTPUT);

  digitalWrite(LED_BUILTIN, 1);
  delay(2000);
  digitalWrite(LED_BUILTIN, 0);
  delay(1000);

  display.begin(SSD1306_SWITCHCAPVCC, 0x3C);

  digitalWrite(LED_BUILTIN, 0);
  digitalWrite(Arranque, 0);
  display.clearDisplay();
  display.setTextSize(3);      // Normal 1:1 pixel scale
  display.setTextColor(WHITE); // Draw white text
  display.setCursor(0, 0);     // Start at top-left corner
  display.cp437(true);
  // initialize digital pin LED_BUILTIN as an output.

  SerialBT.begin("Kawasaki"); //Bluetooth device name
  display.clearDisplay();
  display.drawBitmap(0, 6, logoKAWASAKI, LOGO_KAWASAKI_WIDTH, LOGO_KAWASAKI_HEIGHT, 1);
  display.display();
  delay(2000);
  display.clearDisplay();
  display.drawBitmap(0, 3, logoER6N, LOGO_ER6N_WIDTH, LOGO_ER6N_HEIGHT, 1);
  display.display();
  delay(2000);
  display.setTextSize(1);
}

// the loop function runs over and over again forever
void loop()
{
  display.clearDisplay();
  display.drawBitmap(0, 0, logoBluetooth, LOGO_BLUETOOTH_WIDTH, LOGO_BLUETOOTH_HEIGHT, 1);
  display.display();
  delay(2000);
  display.drawBitmap(32, 1, logoTemp1, LOGO_TEMP_WIDTH, LOGO_TEMP_HEIGHT, 1);
  display.display();
  delay(500);
  display.drawBitmap(32, 1, logoTemp2, LOGO_TEMP_WIDTH, LOGO_TEMP_HEIGHT, 1);
  display.display();
  delay(500);
  display.drawBitmap(32, 1, logoTemp3, LOGO_TEMP_WIDTH, LOGO_TEMP_HEIGHT, 1);
  display.display();
  delay(500);
  display.clearDisplay();
  //display.drawBitmap(0,2,logoGear,28,28,1);
  display.setCursor(0, 0);
  display.setTextSize(4);
  display.println("1");
  display.display();
  delay(2000);
  display.clearDisplay();
  //display.drawBitmap(0,2,logoGear,28,28,1);
  display.setCursor(0, 0);
  display.setTextSize(4);
  display.println("N");
  display.display();
  delay(2000);
  display.clearDisplay();
  //display.drawBitmap(0,2,logoGear,28,28,1);
  display.setCursor(0, 0);
  display.setTextSize(4);
  display.println("2");
  display.display();
  delay(2000);
  display.clearDisplay();
  //display.drawBitmap(0,2,logoGear,28,28,1);
  display.setCursor(0, 0);
  display.setTextSize(4);
  display.println("3");
  display.display();
  delay(2000);
  display.clearDisplay();
  //display.drawBitmap(0,2,logoGear,28,28,1);
  display.setCursor(0, 0);
  display.setTextSize(4);
  display.println("4");
  display.display();
  delay(2000);
  display.clearDisplay();
  //display.drawBitmap(0,2,logoGear,28,28,1);
  display.setCursor(0, 0);
  display.setTextSize(4);
  display.println("5");
  display.display();
  delay(2000);
  display.clearDisplay();
  //display.drawBitmap(0,2,logoGear,28,28,1);
  display.setCursor(0, 0);
  display.setTextSize(4);
  display.println("6");
  display.display();
  delay(2000);
  display.drawBitmap(32, 1, logoTemp1, LOGO_TEMP_WIDTH, LOGO_TEMP_HEIGHT, 1);
  display.display();
  delay(500);
  display.drawBitmap(32, 1, logoTemp2, LOGO_TEMP_WIDTH, LOGO_TEMP_HEIGHT, 1);
  display.display();
  delay(500);
  display.drawBitmap(32, 1, logoTemp3, LOGO_TEMP_WIDTH, LOGO_TEMP_HEIGHT, 1);
  display.display();
  delay(500);

  if (SerialBT.available())
  {
    display.clearDisplay();
    display.setCursor(0, 0);
    Valor = SerialBT.readStringUntil('\n');
    Serial.println(Valor);
    display.println(Valor);
    display.display();
    Serial.println(Valor);
    Serial.println(Encendido);
    delay(2000);

    Serial.println("Valor" + Valor.equals(Encendido));
    if (Valor.equals(Encendido))
    {
      display.clearDisplay();
      display.setCursor(0, 0);
      digitalWrite(Arranque, 0);
      display.println("Apagado");
      display.display();
    }
    else
    {
      display.clearDisplay();
      display.setCursor(0, 0);
      digitalWrite(Arranque, 1);
      display.println("Encendido");
      display.display();
    }
  }
}
